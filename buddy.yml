- pipeline: "test"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "refs/*"
  ref_type: "WILDCARD"
  fetch_all_refs: true
  trigger_condition: "ALWAYS"
  actions:
  - action: "Execute: composer tests"
    type: "BUILD"
    working_directory: "/buddy/repman"
    docker_image_name: "library/php"
    docker_image_tag: "7.4.1"
    execute_commands:
    - "composer validate"
    - "composer install"
    - "rm -rf var/cache"
    - "composer reset-db"
    - "composer tests"
    - "bash <(curl -s https://codecov.io/bash)"
    setup_commands:
    - "apt-get update && apt-get install -y git zip"
    - "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
    - ""
    - "# php ext pdo_pgsql"
    - "apt-get install -y libpq-dev"
    - "docker-php-ext-configure pdo_pgsql --with-pdo-pgsql"
    - "docker-php-ext-install pdo_pgsql"
    - ""
    - "# coverage driver"
    - "pecl install pcov && docker-php-ext-enable pcov"
    - ""
    - "# intl"
    - "apt-get install -y libicu-dev && \\"
    - "  docker-php-ext-configure intl && \\"
    - "  docker-php-ext-install intl"
    - ""
    - "# zip"
    - "apt-get install -y zip unzip libzip-dev"
    - "docker-php-ext-configure zip"
    - "docker-php-ext-install zip"
    - "  "
    - "echo \"memory_limit=-1\" >> /usr/local/etc/php/conf.d/buddy.ini"
    services:
    - type: "POSTGRE_SQL"
      version: "11.6-alpine"
      connection:
        host: "postgres"
        port: 5432
        user: "main"
        password: "main"
        db: "main"
    volume_mappings:
    - "/:/buddy/repman"
    trigger_condition: "ALWAYS"
    shell: "BASH"
  - action: "Run repman/deploy"
    type: "RUN_NEXT_PIPELINE"
    comment: "Triggered by $BUDDY_PIPELINE_NAME execution #$BUDDY_EXECUTION_ID"
    trigger_condition: "VAR_IS"
    trigger_variable_value: "master"
    trigger_variable_key: "BUDDY_EXECUTION_BRANCH"
    revision: "INHERIT"
    next_project_name: "repman"
    next_pipeline_name: "deploy"
  variables:
  - key: "DATABASE_URL"
    value: "postgresql://main:main@postgres:5432/main?serverVersion=11&charset=utf8"
    id: 352921
    description: ""
- pipeline: "security"
  trigger_mode: "SCHEDULED"
  ref_name: "master"
  ref_type: "BRANCH"
  start_date: "2020-02-05T07:00:00.000Z"
  delay: 1440
  fetch_all_refs: true
  trigger_condition: "ALWAYS"
  actions:
  - action: "Execute: composer security"
    type: "BUILD"
    working_directory: "/buddy/repman"
    docker_image_name: "library/php"
    docker_image_tag: "7.4.1"
    execute_commands:
    - "composer install --no-scripts"
    - "composer security"
    setup_commands:
    - "apt-get update && apt-get install -y git zip"
    - "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
    - ""
    - "# php ext pdo_pgsql"
    - "apt-get install -y libpq-dev"
    - "docker-php-ext-configure pdo_pgsql --with-pdo-pgsql"
    - "docker-php-ext-install pdo_pgsql"
    - ""
    - "# coverage driver"
    - "pecl install pcov && docker-php-ext-enable pcov"
    - ""
    - "# intl"
    - "apt-get install -y libicu-dev && \\"
    - "  docker-php-ext-configure intl && \\"
    - "  docker-php-ext-install intl"
    - ""
    - "# zip"
    - "apt-get install -y zip unzip libzip-dev"
    - "docker-php-ext-configure zip"
    - "docker-php-ext-install zip"
    - "  "
    - "echo \"memory_limit=-1\" >> /usr/local/etc/php/conf.d/buddy.ini"
    volume_mappings:
    - "/:/buddy/repman"
    trigger_condition: "ALWAYS"
    shell: "BASH"
  variables:
  - key: "DATABASE_URL"
    value: "postgresql://main:main@postgres:5432/main?serverVersion=11&charset=utf8"
    id: 327567
    description: ""
- pipeline: "setup"
  trigger_mode: "MANUAL"
  ref_name: "refs/heads/*"
  ref_type: "WILDCARD"
  fetch_all_refs: true
  trigger_condition: "ALWAYS"
  actions:
  - action: "Run setup playbook"
    type: "BUILD"
    working_directory: "/buddy/repman"
    docker_image_name: "library/ubuntu"
    docker_image_tag: "19.10"
    execute_commands:
    - "ansible-playbook ansible/setup.yml -i ansible/inventories/$REPMAN_ANSIBLE_INVENTORY"
    setup_commands:
    - "apt-get update && apt-get -y install ansible ssh python3-distutils"
    - "mkdir ~/.ssh && ssh-keyscan 3.136.55.89 >> ~/.ssh/known_hosts"
    volume_mappings:
    - "/:/buddy/repman"
    trigger_condition: "ALWAYS"
    shell: "BASH"
- pipeline: "deploy"
  trigger_mode: "MANUAL"
  ref_name: "master"
  ref_type: "BRANCH"
  target_site_url: "https://app.repman.io"
  fetch_all_refs: true
  trigger_condition: "ALWAYS"
  actions:
  - action: "Run deploy playbook"
    type: "BUILD"
    working_directory: "/buddy/repman"
    docker_image_name: "library/ubuntu"
    docker_image_tag: "19.10"
    execute_commands:
    - "ansible-playbook ansible/deploy.yml -i ansible/inventories/$REPMAN_ANSIBLE_INVENTORY"
    setup_commands:
    - "apt-get update && apt-get -y install ansible ssh python3-distutils"
    - "mkdir ~/.ssh && ssh-keyscan 3.136.55.89 >> ~/.ssh/known_hosts"
    volume_mappings:
    - "/:/buddy/repman"
    trigger_condition: "ALWAYS"
    shell: "BASH"
- pipeline: "[master] Build and push Docker image"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "master"
  ref_type: "BRANCH"
  fetch_all_refs: true
  trigger_condition: "ALWAYS"
  actions:
  - action: "Run repman/test"
    type: "RUN_NEXT_PIPELINE"
    wait: true
    comment: "Triggered by $BUDDY_PIPELINE_NAME execution #$BUDDY_EXECUTION_ID"
    trigger_condition: "ALWAYS"
    revision: "INHERIT"
    next_project_name: "repman"
    next_pipeline_name: "test"
  - action: "Lint Dockerfile"
    type: "DOCKERFILE_LINTER"
    local_path: "Dockerfile"
    shell_type: "bash"
    trigger_condition: "ALWAYS"
    ignore_errors: true
  - action: "Build Docker image"
    type: "DOCKERFILE"
    dockerfile_path: "Dockerfile"
    trigger_condition: "ALWAYS"
  - action: "Push Docker image"
    type: "DOCKER_PUSH"
    login: "$REPMAN_DOCKER_HUB_LOGIN"
    password: "$REPMAN_DOCKER_HUB_PASSWORD"
    docker_image_tag: "latest"
    repository: "buddy/repman"
    trigger_condition: "ALWAYS"
- pipeline: "[tag] Build and push Docker image"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "refs/tags/*"
  ref_type: "WILDCARD"
  fetch_all_refs: true
  trigger_condition: "ALWAYS"
  actions:
  - action: "Run repman/test"
    type: "RUN_NEXT_PIPELINE"
    wait: true
    comment: "Triggered by $BUDDY_PIPELINE_NAME execution #$BUDDY_EXECUTION_ID"
    trigger_condition: "ALWAYS"
    revision: "INHERIT"
    next_project_name: "repman"
    next_pipeline_name: "test"
  - action: "Lint Dockerfile"
    type: "DOCKERFILE_LINTER"
    local_path: "Dockerfile"
    shell_type: "bash"
    trigger_condition: "ALWAYS"
    ignore_errors: true
  - action: "Build Docker image"
    type: "DOCKERFILE"
    dockerfile_path: "Dockerfile"
    trigger_condition: "ALWAYS"
  - action: "Push Docker image"
    type: "DOCKER_PUSH"
    login: "$REPMAN_DOCKER_HUB_LOGIN"
    password: "$REPMAN_DOCKER_HUB_PASSWORD"
    docker_image_tag: "$BUDDY_EXECUTION_TAG"
    repository: "buddy/repman"
    trigger_condition: "ALWAYS"

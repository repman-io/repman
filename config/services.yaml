# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    package_name_pattern: '[A-Za-z0-9_.-]+/[A-Za-z0-9_./~-]+?'
    organization_pattern: '[a-z0-9_-]+' # remember to change in security.yaml (access_control)
    domain_separator: '%env(resolve:APP_DOMAIN_SEPARATOR)%' # '-' can be used as alternative for simpler certificate handling in 1 organization self-hosted installs
    organization_separator: '%env(default:domain_separator:resolve:APP_ORGANIZATION_SEPARATOR)%' # secondary separator, see organization_repo_url
    uuid_pattern: '[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}'
    dists_dir: '%env(resolve:PROXY_DIST_DIR)%'
    repo_dir: '%env(resolve:PACKAGES_DIST_DIR)%'
    domain: '%env(resolve:APP_HOST)%'
    url_scheme: '%env(resolve:APP_URL_SCHEME)%'
    router.request_context.scheme: '%env(resolve:APP_URL_SCHEME)%'
    router.request_context.host: '%env(default:domain:APP_PUBLIC_HOST)%'
    security_advisories_db_dir: '%env(resolve:SECURITY_ADVISORIES_DB_DIR)%'
    security_advisories_db_repo: 'https://github.com/FriendsOfPHP/security-advisories.git'
    instance_id_file: '%kernel.project_dir%/var/instance-id'
    kernel_version: !php/const Buddy\Repman\Kernel::REPMAN_VERSION
    storage.aws.endpoint: ~ # Default to null
    storage.aws.pathstyle: ~ # Default to null
    storage.aws.key: ~
    storage.aws.secret: ~
    storage.aws.opaque_auth: false # Default to false

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $distsDir: '%dists_dir%'
            $resetPasswordTokenTtl: 86400 # 24h
            Symfony\Component\HttpFoundation\Session\Session $session: '@session'
            $proxyFilesystem: '@proxy.storage'
            $repoFilesystem: '@repo.storage'
            $instanceIdFile: '%instance_id_file%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Buddy\Repman\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    Buddy\Repman\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    Buddy\Repman\Service\Integration\Aws\S3AdapterFactory:
        arguments:
            - '%env(STORAGE_AWS_REGION)%'
            - '%env(default:storage.aws.opaque_auth:bool:STORAGE_AWS_OPAQUE_AUTH)%'
            - '%env(default:storage.aws.key:STORAGE_AWS_KEY)%'
            - '%env(default:storage.aws.secret:STORAGE_AWS_SECRET)%'
            - '%env(default:storage.aws.endpoint:STORAGE_AWS_ENDPOINT)%'
            - '%env(default:storage.aws.pathstyle:bool:STORAGE_AWS_PATH_STYLE_ENDPOINT)%'

    Aws\S3\S3Client:
        lazy: true
        factory:
            - '@Buddy\Repman\Service\Integration\Aws\S3AdapterFactory'
            - create

    proxy.storage.public:
        public: true
        alias: 'proxy.storage'

    Buddy\Repman\Service\Proxy\ProxyRegister:
        public: true

    repman.organization.dist_storage: '@Buddy\Repman\Service\Dist\Storage'

    Buddy\Repman\Service\Mailer\SymfonyMailer:
        arguments:
            $sender: '%env(resolve:MAILER_SENDER)%'

    Buddy\Repman\Service\Organization\PackageManager:
        arguments:
            $distStorage: '@repman.organization.dist_storage'

    Buddy\Repman\Service\PackageSynchronizer\ComposerPackageSynchronizer:
        arguments:
            $distStorage: '@repman.organization.dist_storage'
            $gitlabUrl: '%env(APP_GITLAB_API_URL)%'

    Buddy\Repman\Form\Type\Organization\AddPackageType:
        arguments:
            $allowedTypes: '%env(csv:APP_ALLOWED_PACKAGE_TYPES)%'

    Buddy\Repman\Form\Type\Api\AddPackageType:
        arguments:
            $allowedTypes: '%env(csv:APP_ALLOWED_PACKAGE_TYPES)%'

    Buddy\Repman\Service\Twig\OAuthProviderExtension:
        arguments:
            -
                github: '%env(OAUTH_GITHUB_CLIENT_ID)%'
                gitlab: '%env(OAUTH_GITLAB_CLIENT_ID)%'
                bitbucket: '%env(OAUTH_BITBUCKET_CLIENT_ID)%'
                buddy: '%env(OAUTH_BUDDY_CLIENT_ID)%'

    Buddy\Repman\Service\Security\SecurityChecker\SensioLabsSecurityChecker:
        arguments:
            $databaseDir: '%security_advisories_db_dir%'
            $databaseRepo: '%security_advisories_db_repo%'

    Buddy\Repman\Service\Telemetry:
        arguments:
            $failedTransport: '@messenger.transport.failed'

    Doctrine\Migrations\Version\DbalMigrationFactory: ~
    Buddy\Repman\Migrations\Factory\MigrationFactoryDecorator:
        decorates: Doctrine\Migrations\Version\DbalMigrationFactory
        arguments: ['@Buddy\Repman\Migrations\Factory\MigrationFactoryDecorator.inner', '@service_container']

    Buddy\Repman\Service\Twig\DateExtension:
        arguments: ['@security.token_storage']

    ### Vendor
    Github\Client:
        arguments:
            - '@Github\HttpClient\Builder'

    Github\HttpClient\Builder:
        arguments:
            - '@Psr\Http\Client\ClientInterface'
            - '@Psr\Http\Message\RequestFactoryInterface'
            - '@Psr\Http\Message\StreamFactoryInterface'

    Bitbucket\Client:
        arguments:
            - '@Bitbucket\HttpClient\Builder'

    Bitbucket\HttpClient\Builder:
        arguments:
        - '@Psr\Http\Client\ClientInterface'
        - '@Psr\Http\Message\RequestFactoryInterface'
        - '@Psr\Http\Message\StreamFactoryInterface'

    Bitbucket\ResultPagerInterface:
        class: Bitbucket\ResultPager
        arguments:
            - '@Bitbucket\Client'

    Gitlab\Client:
        arguments:
            - '@Gitlab\HttpClient\Builder'

    Gitlab\HttpClient\Builder:
        arguments:
        - '@Psr\Http\Client\ClientInterface'
        - '@Psr\Http\Message\RequestFactoryInterface'
        - '@Psr\Http\Message\StreamFactoryInterface'

    Gitlab\ResultPager:
        arguments:
            - '@Gitlab\Client'

    Sentry\Integration\IgnoreErrorsIntegration:
        arguments:
            $options:
                ignore_exceptions:
                    - 'Symfony\Component\Security\Core\Exception\AccessDeniedException'
                    - 'Symfony\Component\Security\Core\Exception\AuthenticationCredentialsNotFoundException'
                    - 'Symfony\Component\HttpKernel\Exception\NotFoundHttpException'
                    - 'Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException'

    Buddy\Repman\Service\Integration\GitLabApi\RestGitLabApi:
        arguments:
            $url: '%env(APP_GITLAB_API_URL)%'

    Buddy\Buddy:
